#include<stdio.h>
#include<unistd.h>
#include<stdlib.h>
int main()
{
	int pid,pid1,pid2;
	pid = fork();
	if (pid == -1){
		printf("Error in process creation\n");
		exit(1);
	}
	if (pid != 0){
		pid1 = getpid();
		printf("\nThe parent process ID is %d\n",pid1);
	}else{
		pid2 = getpid();
		printf("\nThe child process ID is %d\n",pid2);
	}
	return 0;
}



#include<stdio.h>
#include<stdlib.h>
#include<dirent.h>
int main(){
	char buff[100];
	DIR*dirp;
	struct dirent*dptr;
	printf("\n\nEnter directory name:");
	scanf("%s",buff);
	dirp = opendir(buff);
	if(dirp == NULL){
		printf("The given directory does not exist.\n");
		exit(1);
	}
	printf("Contents od directory %s:\n",buff);
	while((dptr = readdir(dirp)) != NULL){
		printf("%s\n",dptr->d_name);
	}
	closedir(dirp);
	return 0;
}



#include<stdio.h>
int main(int argc,char*argv[])
{
	FILE*fp;
	char ch;
	int sc = 0;
	if(argc != 2){
		printf("Usage:%s<filename>\n",argv[0]);
		return 1;
	}
	fp = fopen(argv[1],"r");
	if(fp == NULL){
		printf("Unable to open the file:%s\n",argv[1]);
	} else {
		while((ch = fgetc(fp))!= EOF){
			if (ch == ' '){
				sc++;
			}
		}
		printf("Number of spaces: %d\n",sc);
		fclose(fp);
	}
	return 0;
}